<?php
/**
 * @file
 * Code for the PW Search api feature.
 */

include_once 'pw_search_api.features.inc';
include_once 'pw_customfacets.inc';

function pw_search_api_search_api_views_query_alter(view &$view, SearchApiViewsQuery &$query) { // check for display
  if ($view->name == 'vote_search' && arg(0) == 'node' && is_numeric(arg(1))) {
    // Adds filter to only show items for the current node.
    $query->where[1]['conditions'][] = array("field_vote_node", arg(1), "=");
  }
}

// Sets search term in header form
function pw_search_api_block_view_alter(&$data, $block){
  if ($block->module == "custom_search_blocks" && $block->delta == 1) {
  	if (isset(drupal_get_query_parameters()["s"])) {
      $data['content']['custom_search_blocks_form_1']['#attributes']['value'] = drupal_get_query_parameters()["s"];
  	}
  }
}

/**
 * Implements hook_node_presave().
 * Sets sort date field depending on node type
 */
function pw_search_api_node_presave($node) {
  switch ($node->type) {
    case 'poll':
      $node->field_search_sort_date['und'][0]['value']  = $node->field_poll_date['und'][0]['value'];
      $node->field_search_sort_date['und'][0]['value2'] = $node->field_search_sort_date['und'][0]['value'];
      break;
    case 'blogpost':
      $node->field_search_sort_date['und'][0]['value']  = date("Y-m-d H:i:s",$node->created);
      $node->field_search_sort_date['und'][0]['value2'] = $node->field_search_sort_date['und'][0]['value'];
      break;
    case 'dialogue':
      $node->field_search_sort_date['und'][0]['value']  = date("Y-m-d H:i:s",$node->created);
      $node->field_search_sort_date['und'][0]['value2'] = $node->field_search_sort_date['und'][0]['value'];
      break;
    case 'page':
      $node->field_search_sort_date['und'][0]['value']  = date("Y-m-d H:i:s",$node->created);
      $node->field_search_sort_date['und'][0]['value2'] = $node->field_search_sort_date['und'][0]['value'];
      break;
    case 'pw_petition':
      $node->field_search_sort_date['und'][0]['value']  = date("Y-m-d H:i:s",$node->changed);
      $node->field_search_sort_date['und'][0]['value2'] = $node->field_search_sort_date['und'][0]['value'];
      break;
  }
}

/**
 * Helper function to initialize the sort date for all relevant nodes,
 */
function pw_search_api_set_sort_date() {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', ['poll','blogpost','page','dialogue','pw_petition'], 'IN');//,'blogpost','page','dialogue','pw_petition'
  $nodes = $query->execute();
  $i = 1;
  $ct = count($nodes['node']);
  foreach ($nodes['node'] as $node){
    print('Updated Node '.$node->nid."\t(".$i.' of '.$ct.')'.PHP_EOL);
    $i++;
    $current_node = node_load($node->nid);
    node_save($current_node);
  }
}